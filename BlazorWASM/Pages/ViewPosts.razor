@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IPostService PostService
@inject NavigationManager NavMgr

<h3>All Posts</h3>


@if (_posts == null)
{
    <span>Loading...</span>
}
else if (!_posts.Any())
{
    <span>No Posts to display</span>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Post Id</th>
            <th>Poster Username</th>
            <th>Title</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in _posts)
        {
            <tr style="cursor: pointer;" @onclick="@(() => NavMgr.NavigateTo($"/ViewPost/{item.Id}"))">
                <td>@item.Id</td>
                <td>@item.Poster.Username</td>
                <td>@item.Title</td>
            </tr>
        }
        </tbody>
    </table>
}
@if (!string.IsNullOrEmpty(_msg))
{
    <label style="color: red">@_msg</label>
}

@code {
    private IEnumerable<Post>? _posts;
    private string _msg = "";

    protected override async Task OnInitializedAsync()
    {
        _msg = "";
        try
        {
            _posts = await PostService.GetAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _msg = e.Message;
        }
    }

}