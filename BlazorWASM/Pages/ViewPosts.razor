@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IPostService PostService
@inject NavigationManager NavMgr

<MudText Typo="Typo.h3">All Posts</MudText>

@if (_posts == null)
{
    <MudText>Loading...</MudText>
}
else if (!_posts.Any())
{
    <MudText>No Posts to display</MudText>
}
else
{
    <MudStack Height="100%" Width="100%">
        
        @foreach (var item in _posts)
        {
            <MudPaper Class="pa-3" Width="100%" Square="true" style="cursor: pointer;" @onclick="@(() => NavMgr.NavigateTo($"/ViewPost/{item.Id}"))">
                <MudText>@item.Poster.Username</MudText>
                <MudText>@item.Title</MudText>
            </MudPaper>
        }
    </MudStack>
}
@if (!string.IsNullOrEmpty(_msg))
{
    <label style="color: red">@_msg</label>
}

@code {
    private IEnumerable<Post>? _posts;
    private string _msg = "";

    protected override async Task OnInitializedAsync()
    {
        _msg = "";
        try
        {
            var posts = await PostService.GetAsync();
            _posts = posts.Reverse();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            _msg = e.Message;
        }
    }

}