@using HttpClients.ClientInterfaces
@using Domain.Models
@inject IPostService PostService
@inject NavigationManager NavMgr
@inject ISnackbar SnackBar
@if (_posts == null)
{
    <MudText>Loading...</MudText>
}
else if (!_posts.Any())
{
    <MudText>No Posts to display</MudText>
}
else
{
    <MudStack Spacing="8" Class="mt-4" Height="100%" Width="100%">
        @foreach (var item in _posts)
        {
            <MudPaper Elevation="2" Class="pa-7" Width="100%" Square="true" style="cursor: pointer;" @onclick="@(() => NavMgr.NavigateTo($"/ViewPost/{item.Id}"))">
                <MudText Typo="Typo.h4">@item.Title</MudText>
                <MudDivider/>
                <MudSpacer/>
                <MudText Align="Align.Right">By: @item.Poster.Username</MudText>
            </MudPaper>
        }
    </MudStack>
}

@code {
    private IEnumerable<Post>? _posts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var posts = await PostService.GetAsync();
            _posts = posts.Reverse();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            SnackBar.Add(e.Message, Severity.Error);
        }
    }

}