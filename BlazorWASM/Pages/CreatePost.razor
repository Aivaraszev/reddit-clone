@page "/CreatePost"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IPostService PostService
@inject NavigationManager NavMgr
@inject ISnackbar Snackbar
@attribute [Authorize]
<MudContainer MaxWidth="MaxWidth.Small">
    <MudPaper Class="pa-7">
        <MudTextField @bind-Value="_title" InputType="InputType.Text" Label="Title"></MudTextField>
        <MudTextField @bind-Value="_body" InputType="InputType.Text" Label="Body"></MudTextField>
        <MudButton Variant="Variant.Filled" Disabled="@Validate()" OnClick="CreateAsync" Color="Color.Success">Create</MudButton>
        <MudButton Variant="Variant.Filled" OnClick="@(() => NavMgr.NavigateTo("/"))" Color="Color.Error">Go Back</MudButton>
    </MudPaper>
</MudContainer>

@code {
    private string _title = "";
    private string _body = "";


    private async Task CreateAsync()
    {
        try
        {
            await PostService.CreateAsync(new PostCreationRequestDto
            {
                Title = _title,
                Body = _body
            });
            ;
            Snackbar.Add("Post successfully created");
            NavMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            Snackbar.Add(e.Message, Severity.Error);
        }
    }

    private bool Validate()
    {
        return string.IsNullOrEmpty(_title) || string.IsNullOrEmpty(_body);
    }

}